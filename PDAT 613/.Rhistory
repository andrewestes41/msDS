#install.packages("tidyverse")
#install.packages("AmesHousing")
#install.packages("colorspace")
library(tidyverse)
library(AmesHousing)
library(colorspace)
#loading the libraries
#introduce the data set.
#Run the Cleaning script
ames_quick <- make_ordinal_ames() %>%
mutate(Central_Air = fct_rev(Central_Air)) %>%
mutate(Kitchen_Qual = factor(Kitchen_Qual, ordered=FALSE)) %>%
mutate(Sale_Price = Sale_Price/1000) %>%
filter(Gr_Liv_Area<4500)
#Creating the dataset (making kitchen quality a factor, etc).
summary(ames_quick$Kitchen_Qual)
#Looking at the breakdown of kitchen quality data
summary(ames_quick$Gr_Liv_Area)
#Looking at the breakdown of above grade living area square footage
#Two-variable Scatterplot: Above_Grade_Square_footage and Kitchen_Quality
ggplot(ames_quick, aes(y=Sale_Price, x=Gr_Liv_Area, color=Kitchen_Qual))+
geom_point()+
geom_smooth(method="lm")+
scale_color_discrete_qualitative(palette = "Dark3")
#Creating a pretty graph
#Create and compare two regression models
ames_lm_Size <- lm(Sale_Price~ Gr_Liv_Area, data=ames_quick)
summary(ames_lm_Size)
#Creating linear regression model only using the above grade living area square
ames_lm_2K <- lm(Sale_Price~ Gr_Liv_Area + Kitchen_Qual, data=ames_quick)
summary(ames_lm_2K)
#Linear regression model with both the above grade living area square footage and
#kitchen quality as predictor variables.
#Imagine you were consulting for a potential home seller. Write a technical paper
#about whether the quality of a kitchen is important in the valuation of a home.
#Discuss the chart and the regression models.
#Two-variable Scatterplot: Above_Grade_Square_footage and Kitchen_Quality
ggplot(ames_quick, aes(y=Sale_Price, x=Gr_Liv_Area, color=Kitchen_Qual))+
geom_point()+
geom_smooth(method="lm")+
scale_color_discrete_qualitative(palette = "Dark3")
#Now, imagine you are consulting for a realtor in the area. Write a white paper
#about the importance of the quality of a kitchen to the valuation of a home.
#Discuss the chart and the regression models.
#Two-variable Scatterplot: Above_Grade_Square_footage and Kitchen_Quality
ggplot(ames_quick, aes(y=Sale_Price, x=Gr_Liv_Area, color=Kitchen_Qual))+
geom_point()+
geom_smooth(method="lm")+
scale_color_discrete_qualitative(palette = "Dark3")
ames_lm_2K <- lm(Sale_Price~ Gr_Liv_Area + Kitchen_Qual, data=ames_quick)
summary(ames_lm_2K)
#Now, imagine you are presenting on this topic to fellow students in an mid-level
#statistics course. Sketch a script outline explaining how the quality of a
#kitchen influences the valuation of the home. Discuss the chart and the
#regression models (you don't need to include them again).
#Write a short reflection (about 300 words) explaining how the audience and
#mode led to differences in the three reports.
library(tidyverse)
library(lubridate)
orig.df <- read.csv("austinClimate.csv")
orig.df <- read.csv("austinClimate.csv")
View(orig.df)
#Two-variable Scatterplot: Above_Grade_Square_footage and Kitchen_Quality
ggplot(ames_quick, aes(y=Sale_Price, x=Gr_Liv_Area, color=Kitchen_Qual))+
geom_point()+
geom_smooth(method="lm")+
scale_color_discrete_qualitative(palette = "Dark3")
#Creating a pretty graph
library(tidyverse)
library(lubridate)
library(colorspace)
fit1 <- lm(DATE ~ TMAX, data = orig.df)
fit1 <- lm(DATE ~ TMAX, data = orig.df, na.rm=TRUE)
#adding weather dataframe and cleaning up slightly
weather <- read_xlsx("belgiumWeather2.xlsx")
setwd("C:/Users/andre/OneDrive/Desktop/msDS")
#adding weather dataframe and cleaning up slightly
weather <- read_xlsx("belgiumWeather2.xlsx")
setwd("C:/Users/andre/OneDrive/Desktop/msDS/PDAT 613")
#adding weather dataframe and cleaning up slightly
weather <- read_xlsx("belgiumWeather2.xlsx")
fit1 <- lm(orig.df$DATE ~ orig.df$TMAX)
fit1 <- lm(orig.df$DATE ~ orig.df$TMAX, na.rm=TRUE)
df <- drop_na(orig.df$TMAX)
ggplot(data = orig.df, aes(x=Date, y=TMAX)) +
geom_line()
ggplot(data = orig.df, aes(x=DATE, y=TMAX)) +
geom_line()
View(orig.df)
ggplot(data = orig.df, aes(x=DATE, y=TMAX)) +
geom_scatter()
ggplot(data = orig.df, aes(x=DATE, y=TMAX)) +
geom_point()
class(orig.df$DATE)
df <- orig.df %>%
mutate(DATE = as.Date(DATE))
class(df$DATE)
ggplot(data = orig.df, aes(x=DATE, y=TMAX)) +
geom_point()
ggplot(data = orig.df, aes(x=DATE, y=TMAX)) +
geom_point()
class(df$DATE)
ggplot(data = df, aes(x=DATE, y=TMAX)) +
geom_point()
ggplot(data = df, aes(x=DATE, y=TMAX)) +
geom_point()
ggplot(data = df, aes(x=DATE, y=TMAX)) +
geom_line()
ggplot(data = df, aes(x=DATE, y=TMAX)) +
geom_point()
View(df)
df <- orig.df %>%
mutate(DATES = as.Date(DATE))
ggplot(data = df, aes(x=DATES, y=TMAX)) +
geom_point()
class(df$DATE)
class(df$DATES)
df <- orig.df %>%
mutate(DATES = as.Date(DATE)) %>%
select(-DATE)
View(df)
ggplot(data = df, aes(x=DATES, y=TMAX)) +
geom_point()
class(df$DATES)
ggplot(data = df, aes(x=DATES, y=TMIN)) +
geom_point()
df <- orig.df %>%
mutate(NUMBERS = 1Lnrow(orig.df))
orig.df$NUMBERS <- 1:nrow(orig.df)
View(orig.df)
ggplot(data = df, aes(x=NUMBERS, y=TMAX)) +
geom_point()
ggplot(data = orig.df, aes(x=NUMBERS, y=TMAX)) +
geom_point()
ggplot(data = df, aes(x=NUMBERS, y=TMIN)) +
geom_point()
ggplot(data = origdf, aes(x=NUMBERS, y=TMIN)) +
geom_point()
ggplot(data = orig.df, aes(x=NUMBERS, y=TMIN)) +
geom_point()
df <- orig.df %>%
mutate(DATES = as.Date(DATE)) %>%
select(-DATE)
View(df)
#scatterplot of max daily temperature, 89 values removes
ggplot(data = df, aes(x=DATES, y=TMAX)) +
geom_point()
NUMBERS
orig
#scatterplot of max daily temperature, 89 values removes
ggplot(data = orig.df, aes(x=NUMBERS, y=TMAX)) +
geom_point()
df <- orig.df %>%
mutate(DATES = as.Date(DATE, "%Y/%m/%d")) %>%
select(-DATE)
ggplot(data = df, aes(x=DATES, y=TMAX)) +
geom_point()
#creating dataframe
orig.df <- read.csv("austinClimate.csv")
df <- orig.df
df <- orig.df$NUMBERS <- 1:nrow(orig.df)
df$DATE <- as.Date(DATE, '%Y/%m/$d')
df <- orig.df
df$NUMBERS <- 1:nrow(orig.df)
#creating dataframe
orig.df <- read.csv("austinClimate.csv")
df <- orig.df
df$NUMBERS <- 1:nrow(orig.df)
df$DATE <- as.Date(DATE, '%Y/%m/$d')
View(df)
df$DATE <- as.Date(df$DATE, '%Y/%m/%d')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
View(orig.df)
df$DATE <- as.Date(df$DATE, '%Ymd')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
df$DATE <- as.Date(df$DATE, 'Ymd')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
df$DATE <- as.Date(df$DATE, '%Y-%m-%d')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
df$DATE <- as.Date(df$DATE, format = '%Y-%m-%d')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
df$DATE <- as.Date(df$DATE, format = '%Y\%m\%d')
df$DATE <- as.Date(df$DATE, format = '%Y/%m/%d')
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
df <- df %>%
mutate(NUMBERS = 1:nrow(df)) %:%
select(-NAME, STATION)
df <- df %>%
mutate(NUMBERS = 1:nrow(df)) %:%
select(-NAME)
df <- df %>%
select(-NAME)
df <- df %>%
select(-NAME, STATION)
df <- df %>%
select(-NAME &&STATION)
df <- df %>%
select(-NAME &STATION)
df <- orig.df
df <- df %>%
select(-NAME && STATION)
df <- df %>%
select(-NAME & STATION)
df <- orig.df
df$NUMBERS <- 1:nrow(orig.df)
df$DATE <- as.Date(df$DATE, format = '%Y/%m/%d')
df <- df %>%
select(-NAME & STATION)
df <- orig.df
df$NUMBERS <- 1:nrow(orig.df)
df$DATE <- as.Date(df$DATE, format = '%Y/%m/%d')
df <- df %>%
select(-NAME)
df <- df %>%
select(-NAME) %>%
select(-STATION)
df <- orig.df
df$NUMBERS <- 1:nrow(orig.df)
df$DATE <- as.Date(df$DATE, format = '%Y/%m/%d')
df <- df %>%
select(-NAME) %>%
select(-STATION)
class(df$DATE)
View(df)
#removing unnecessary data from df (info never changes)
df <- df %>%
select(-NAME) %>%
select(-STATION)
#copying the original dataframe
df <- orig.df
#removing unnecessary data from df (info never changes)
df <- df %>%
select(-NAME) %>%
select(-STATION)
View(df)
#foregoing the date issues, by simply creating a numeric vector that can be utilized easily for time series analysis
df$NUMBERS <- 1:nrow(orig.df)
#changing the DATE format from character to Date
df$DATE <- as.Date(df$DATE)
class(df$DATE)
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
View(orig.df)
#for some reason there is a giant section of missing data between 12/31/1971 10/15/1992.
ggplot(data = df, aes(DATE, TMAX)) +
geom_point()
#scatterplot of max daily temperature, 89 values removes
ggplot(data = df, aes(DATE, TMIN)) +
geom_point()
#scatterplot of minimum daily temperature, 147 values removed plus all the missing dates
ggplot(data = df, aes(DATE < 1972, TMIN)) +
geom_point()
#scatterplot of minimum daily temperature, 147 values removed plus all the missing dates
ggplot(data = df, aes(DATE, TMIN)) +
geom_point()
ggplot(data = df, aes(DATE < 1980, TMIN)) +
geom_point()
#reviewing the miniture temperature ranges
ggplot(data = df, aes(DATE < 1980, TMIN)) +
geom_line()
#reviewing the miniture temperature ranges
ggplot(data = df, aes(DATE < 1980, TMIN)) +
geom_boxplot()
#reviewing the miniature temperature ranges pre 1980 and post 1980
ggplot(data = df, aes(DATE < 1980, TMAX)) +
geom_boxplot()
#reviewing the miniature temperature ranges pre 1980 and post 1980
ggplot(data = df, aes(DATE < 1950, TMAX)) +
geom_boxplot()
#reviewing the miniature temperature ranges pre 1980 and post 1980
ggplot(data = df, aes(DATE < 1980, TMAX)) +
geom_boxplot()
