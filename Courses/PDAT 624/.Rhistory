titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel("Sidebar Panel",
selectInput("team1",
label = h3("Select Team 1"),
choices = nba$TEAM,
selected = "CHA"),
selectInput("var1",
label = h3("Choose Variable 1"),
choices = nbaVariables,
selected = "AGE"),
selectInput("team2",
label = h3("Select Team 2"),
choices = nbaTeams,
selected = "PHX"),
selectInput("var2",
label = h3("Choose Variable 2"),
choices = nbaVariables,
selected = "GP")
),
mainPanel(
h2("Main Plot"),
plotlyOutput("NBAplot")
)
)
)
# Define server logic
server <- function(input, output) {
output$NBAplot <- renderPlotly({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2) %>%
ggplot() +
geom_point(aes(x = nba[[var1]],
y = nba[[var2]]))
ggplotly(p)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('~/estes_nba')
runApp('~/estes_nba')
orig.nba <- read.csv("nba2018.csv")
nba <- orig.nba
nbaTeams <- list("ATL", "BKN", "BOS", "CHA", "CHI", "CLE",
"DAL", "DEN", "DET", "GSW", "HOU", "IND",
"LAC", "LAL", "MEM", "MIA", "MIL", "MIN",
"NOP", "NYK", "OKC", "ORL", "PHI", "PHX",
"POR", "SAC", "SAS", "TOR", "UTA", "WAS")
nbaVariables <- as.list(colnames(nba))
# Define UI for application
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel("Sidebar Panel",
selectInput("team1",
label = h3("Select Team 1"),
choices = nba$TEAM,
selected = "CHA"),
selectInput("var1",
label = h3("Choose Variable 1"),
choices = nbaVariables,
selected = "AGE"),
selectInput("team2",
label = h3("Select Team 2"),
choices = nbaTeams,
selected = "PHX"),
selectInput("var2",
label = h3("Choose Variable 2"),
choices = nbaVariables,
selected = "GP")
),
mainPanel(
h2("Main Plot"),
#plotlyOutput("NBAplot")
dataTableOutput("data")
)
)
)
# Define server logic
server <- function(input, output) {
output$data <- renderDataTable({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2) %>%
ggplot() +
geom_point(aes(x = nba[[var1]],
y = nba[[var2]]))
ggplotly(p)
})
}
# Run the application
shinyApp(ui = ui, server = server)
# Define server logic
server <- function(input, output) {
output$data <- renderDataTable({nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
# Define server logic
server <- function(input, output) {
output$data <- renderDataTable({nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
# Run the application
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$NBAplot <- renderPlotly({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2) %>%
ggplot() +
geom_point(aes(x=var1,
y=var2)) %>%
ggplotly(p)
})
# Define server logic
server <- function(input, output) {
output$NBAplot <- renderPlotly({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2) %>%
ggplot() +
geom_point(aes(x=var1,
y=var2)) %>%
ggplotly(p)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
# Define server logic
server <- function(input, output) {
nba %>% mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
output$data <- renderDataTable({nba %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
# Define server logic
server <- function(input, output) {
nba %>% mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2)
output$data <- renderDataTable({nba %>%
filter(
team1 == team1,
var1 == var1,
team2 == team2,
var2 == var2)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
runApp('~/estes_nba')
runApp()
runApp('~/estes_nba')
runApp()
runApp('~/estes_nba')
runApp()
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
output$data <- renderDataTable({nba %>%
mutate(
team1 = input$team1 && input$team2,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2)
nba %>%
mutate(
team1 = input$team1 && input$team2,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2)
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
# Define UI for application
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel("Sidebar Panel",
selectInput("team1",
label = h3("Select Team 1"),
choices = nbaTeams,
selected = "CHA"),
selectInput("var1",
label = h3("Choose Variable 1"),
choices = (colnames(nba)),
selected = "AGE"),
selectInput("team2",
label = h3("Select Team 2"),
choices = nbaTeams,
selected = "PHX"),
#                 selectInput("var2",
#                             label = h3("Choose Variable 2"),
#                             choices = nbaVariables,
#                             selected = "GP")
),
mainPanel(
h2("Main Plot"),
#plotlyOutput("NBAplot")
dataTableOutput("data")
)
)
)
# Define UI for application
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel("Sidebar Panel",
selectInput("team1",
label = h3("Select Team 1"),
choices = nbaTeams,
selected = "CHA"),
selectInput("var1",
label = h3("Choose Variable 1"),
choices = (colnames(nba)),
selected = "AGE"),
selectInput("team2",
label = h3("Select Team 2"),
choices = nbaTeams,
selected = "PHX"),
#                 selectInput("var2",
#                             label = h3("Choose Variable 2"),
#                             choices = nbaVariables,
#                             selected = "GP")
),
mainPanel(
h2("Main Plot"),
#plotlyOutput("NBAplot")
dataTableOutput("data")
)
)
)
# Define server logic
server <- function(input, output) {
output$data <- renderDataTable({nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2) %>%
filter(
TEAM == team1 | TEAM == team2,
nbaVariables == var1)
})
#  output$NBAplot <- renderPlotly({
#    p <- nba %>%
#      mutate(
#        team1 = input$team1,
#        var1 = input$var1,
#        team2 = input$team2,
#        var2 = input$var2) %>%
#      filter(
#        team1 == team1,
#        var1 == var1,
#        team2 == team2,
#        var2 == var2) %>%
#      ggplot() +
#        geom_point(aes(x = nba[[var1]],
#                       y = nba[[var2]]))
#    ggplotly(p)
#  })
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('~/estes_nba')
runApp()
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
server <- function(input, output) {
output$data <- renderDataTable({nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
TEAM == team1 | TEAM == team2,
) %>%
select(
TEAM, input$var1, input$var2
)
})
output$NBAplot <- renderPlotly({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
TEAM == team1 | TEAM == team2,
) %>%
select(
TEAM, input$var1, input$var2
) %>%
ggplot() +
geom_point(aes(x = input$var1,
y = input$var2))
ggplotly(p)
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp('~/estes_nba')
runApp('~/estes_nba')
output$NBAplot <- renderPlotly({
p <- nba %>%
mutate(
team1 = input$team1,
var1 = input$var1,
team2 = input$team2,
var2 = input$var2) %>%
filter(
TEAM == team1 | TEAM == team2
) %>%
select(
TEAM, input$var1, input$var2
) %>%
ggplot() +
geom_point(aes(x = input$var1,
y = input$var2))
ggplotly(p)
})
# Define UI for application
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel("Sidebar Panel",
selectInput("team1",
label = h3("Select Team 1"),
choices = nbaTeams,
selected = "CHA"),
selectInput("var1",
label = h3("Choose Variable 1"),
choices = (colnames(nba)),
selected = "AGE"),
selectInput("team2",
label = h3("Select Team 2"),
choices = nbaTeams,
selected = "PHX"),
selectInput("var2",
label = h3("Choose Variable 2"),
choices = nbaVariables,
selected = "GP")
),
mainPanel(
h2("Main Plot"),
dataTableOutput("data")
plotlyOutput("NBAplot")
)
)
)
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp('~/estes_nba')
runApp()
runApp()
runApp()
