df <- import("data/StateData.xlsx") %>%
as_tibble() %>%
select(state_code,
psychRegions,
instagram:modernDance) %>%
mutate(psychRegions = as.factor(psychRegions)) %>%
rename(y = psychRegions) %>%
print()
# Install pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
# Load contributed packages with pacman
pacman::p_load(pacman, party, psych, rio, tidyverse)
# Load base packages manually
library(datasets)  # For example datasets
df <- import("data/StateData.xlsx") %>%
as_tibble() %>%
select(state_code,
psychRegions,
instagram:modernDance) %>%
mutate(psychRegions = as.factor(psychRegions)) %>%
rename(y = psychRegions) %>%
print()
# pacman must already be installed; then load contributed
# packages (including pacman) with pacman
pacman::p_load(pacman, rio, tidyverse)
# Save Google Correlate variables
df <- import("data/StateData.xlsx") %>%
as_tibble() %>%
select(instagram:modernDance) %>%
print()
# Clear mind :)
c <- c(1, 2, 5, 9)
C
# Clear mind :)
D <- c(1, 2, 5, 9)
D
# Clear mind :)
C<- c(1, 2, 5, 9)
C
# Clear mind :)
c<- c(1, 2, 5, 9)
c
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  #
l2 <- F
l2
typeof(l2)
pacman::p_load(pacman, party, psych, rio, tidyverse)
library(datasets)  # For example datasets
(df <- read_csv("data/StateData.csv"))
(df <- import("data/StateData.xlsx") %>% as_tibble())
df <- import("data/StateData.xlsx") %>%
as_tibble() %>%
select(state_code,
psychRegions,
instagram:modernDance) %>%
mutate(psychRegions = as.factor(psychRegions)) %>%
rename(y = psychRegions) %>%
print()
fit <- ctree(y ~ ., data = df[, -1])  # Create tree
fit %>% plot()                        # Plot tree
fit %>%                               # Predicted vs true
predict() %>%
table(df$y)
