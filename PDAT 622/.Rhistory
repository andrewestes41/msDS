extreme.threshold.lowerTMAX = lowerqTMAX - (iqrTMAX * 3)
sd(df$TMAX, na.rm=TRUE)
var(df$TMAX, na.rm=TRUE)
View(rangeDF)
View(df)
lyapunovPlot(df$PRCP)
lyapunovPlot(df$PRCP, 3)
lyapunovPlot(df$PRCP, 3, 3)
lyapunovPlot(df$PRCP, 3, 3, ref=5)
lyapunovPlot(x=df$PRCP, m=3, d=3, t=3, ref=5)
lyapunovPlot(x=df$PRCP, m=3, d=3, t=3, ref=5, s=1)
lyapunovPlot(x=df$PRCP, m=3, d=3, t=3, ref=5, s=1, eps=1)
lyapunovPlot(x=df$PRCP, m=3, d=3, t=3, ref=5, s=1, eps=1, doplot=TRUE)
lyapunovPlot(x=df$PRCP, m=3, d=3, t=3, ref=5, s=1, eps=1, doplot=TRUE, na.rm=TRUE)
View(newDF)
noNA <- na.omit(df)
lyapunovPlot(x=noNA$PRCP, m=3, d=3, t=3, ref=5, s=1, eps=1, doplot=TRUE)
noNA <- (df, na.rm=True)
noNA <- df %<%
na.rm=True
noNA <- df %<%
filter(!is.na(PRCP))
noNA <- df %<%
filter(!is.na(PRCP))
noNA <- df %>%
filter(!is.na(PRCP))
noNA <- df %>%
filter(!is.na(df$PRCP))
lyapunovPlot(x=noNA, m=3, d=3, t=3, ref=5, s=1, eps=1, doplot=TRUE)
var(df$TMAX, na.rm=TRUE)
View(df)
sd(df$TMAX, na.rm=TRUE)
var(df$TMAX, na.rm=TRUE)
cov(df$TMAX, df$TMIN)
cov(df$TMAX, df$TMIN, na.rm=TRUE)
sd(df$TMAX, na.rm=TRUE)
var(df$TMAX, na.rm=TRUE)
iqr <- c(iqrTMAX)
lowerqTMAX = quantile(df$TMAX, na.rm=TRUE)[2]
upperqTMAX = quantile(df$TMAX, na.rm=TRUE)[4]
iqrTMAX = upperqTMAX - lowerqTMAX
mild.threshold.upperTMAX = (iqrTMAX * 1.5) + upperqTMAX
mild.threshold.lowerTMAX = lowerqTMAX - (iqrTMAX * 1.5)
extreme.threshold.upperTMAX = (iqrTMAX * 3) + upperqTMAX
extreme.threshold.lowerTMAX = lowerqTMAX - (iqrTMAX * 3)
iqr <- c(iqrTMAX)
iqr
extreme.threshold.lowerTMAX
lowerqTMAX <- quantile(df$TMAX, na.rm=TRUE)[2]
upperqTMAX <- quantile(df$TMAX, na.rm=TRUE)[4]
iqrTMAX <- upperqTMAX - lowerqTMAX
mild.threshold.upperTMAX <- (iqrTMAX * 1.5) + upperqTMAX
mild.threshold.lowerTMAX <- lowerqTMAX - (iqrTMAX * 1.5)
extreme.threshold.upperTMAX <- (iqrTMAX * 3) + upperqTMAX
extreme.threshold.lowerTMAX <- lowerqTMAX - (iqrTMAX * 3)
iqr <- c(iqrTMAX, mild.threshold.upperTMAX)
iqr
iqr <- c(iqrTMAX, mild.threshold.upperTMAX, mild.threshold.lowerTMAX)
iqr
iqr <- c(extreme.threshold.upperTMAX,
mild.threshold.upperTMAX,
iqrTMAX,
mild.threshold.lowerTMAX,
extreme.threshold.lowerTMAX)
iqr
#loading libraries
library(tidyverse)
library(lubridate)
library(colorspace)
library(patchwork)
library(forecast)
library(zoo)
library(xts)
library(fNonlinear)
#creating dataframe
orig.df <- read.csv("austinClimateUPDATED.csv")
#copying the original dataframe
df <- orig.df
#removing unnecessary data from df (info never changes)
df <- df %>%
select(-NAME) %>%
mutate(AVERAGE = (TMAX + TMIN)/2)
#changing the DATE format from character to Date
df$DATE <- as.Date(df$DATE, "%m / %d/ %Y")
#class(df$DATE)
#df separating the date
newDF <- df %>%
separate(DATE, c("YEAR", "MONTH", "DAY")) %>%
mutate(DECADE = floor(as.numeric(YEAR)/10)*10)
#Creating grouping of min-max data by year
maxTemp <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN) %>%
summarise(maxTemp = max(TMAX))
minTemp <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN) %>%
summarise(minTemp = min(TMIN))
maxPRCP <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN, PRCP, SNOW) %>%
summarise(maxPRCP = max(PRCP))
minPRCP <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN, PRCP, SNOW) %>%
summarise(minPRCP = min(PRCP))
maxSNOW <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN, PRCP, SNOW) %>%
summarise(maxSnow = max(SNOW))
minSNOW <- newDF %>%
group_by(YEAR) %>%
select(YEAR, TMAX, TMIN, PRCP, SNOW) %>%
summarise(minSnow = min(SNOW))
rangeDF <- merge(maxTemp, minTemp, by="YEAR")
rangeDF <- merge(rangeDF, maxPRCP, by="YEAR")
rangeDF <- merge(rangeDF, minPRCP, by="YEAR")
rangeDF <- merge(rangeDF, maxSNOW, by="YEAR")
rangeDF <- merge(rangeDF, minSNOW, by="YEAR")
rangeDF <- rangeDF %>%
mutate(TempRange = maxTemp - minTemp) %>%
mutate(PRCPRange = maxPRCP - minPRCP) %>%
mutate(SnowRange = maxSnow - minSnow)
rangeScaled <- rangeDF %>%
mutate_each_(list(~scale(.) %>% as.vector),
vars = c("TempRange","PRCPRange", "SnowRange")) %>%
select(YEAR, TempRange, PRCPRange, SnowRange)
View(minPRCP)
View(maxPRCP)
lagPRCP <- maxPRCP %>%
mutate(lag1 = lag(values, n = 1, default = NA))
lagPRCP <- maxPRCP %>%
mutate(lag1 = lag(maxPRCP, n = 1, default = NA))
View(lagPRCP)
lagPRCP <- maxPRCP %>%
mutate(lag1 = lag(maxPRCP, n = n+4, default = NA))
lagPRCP <- maxPRCP %>%
mutate(lag1 = lag(maxPRCP$maxPRCP, n = n+4, default = NA))
lagPRCP <- maxPRCP %>%
group_by(maxPRCP) %>%
mutate(lag1 = lag(maxPRCP, n = n+4, default = NA))
lagPRCP <- maxPRCP %>%
group_by(year) %>%
mutate(lag1 = lag(maxPRCP, n = n+4, default = NA))
lagPRCP <- maxPRCP %>%
group_by(YEAR) %>%
mutate(lag1 = lag(maxPRCP, n = n+4, default = NA))
lagPRCP <- maxPRCP %>%
mutate(lag1 = lag(maxPRCP, n = 1, default = NA))
lagPRCP <- maxPRCP %>%
mutate(lag1 = 300*(maxPRCP - .5))
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line(aes(y = maxPRCP), color = "darkred") +
geom_line(aes(y = dailyTransactions), color="steelblue", linetype="twodash")
coeff <- 30000
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyRansactions/coeff)) + # Divide by 10 to get the same range than the temperature
scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Second Axis")
)
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyTransactions/coeff)) + # Divide by 10 to get the same range than the temperature
scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Second Axis")
)
coeff <- 300000
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyTransactions/coeff)) + # Divide by 10 to get the same range than the temperature
scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Second Axis")
)
coeff <- 3000
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyTransactions/coeff)) + # Divide by 10 to get the same range than the temperature
scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Second Axis")
)
coeff <- 3
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyTransactions/coeff)) + # Divide by 10 to get the same range than the temperature
scale_y_continuous(
# Features of the first axis
name = "First Axis",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name="Second Axis")
)
lagPRCPscaled <- scale(lagPRCP$maxPRCP, lagPRCP$dailyTransactions)
lagPRCPscaled <- scale(lagPRCP)
lagPRCPscaled <- lagPRCP %>%
select(-YEAR)
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
lagPRCPscaled <- lagPRCP %>%
select(-YEAR) %>%
scale(lagPRCP)
View(lagPRCPscaled)
lagPRCPscaled <- lagPRCP %>%
select(-YEAR) %>%
na.rm=TRUE
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5), na.rm=TRUE)
lagPRCPscaled <- lagPRCP %>%
select(-YEAR) %>%
na.rm=TRUE
lagPRCPscaled <- lagPRCP %>%
select(-YEAR)
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
lagPRCPscaled <- lagPRCP %>%
select(-YEAR)
lagPRCPscaled <- lagPRCP %>%
scale(lagPRCP)
lagPRCPscaled <- lagPRCP %>%
scale(as.numeric(lagPRCP))
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=2)
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=1)
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=1, default=0)
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=1, na.rm=TRUE)
ggplot(lagPRCP, aes(x=YEAR)) +
geom_line( aes(y=maxPRCP)) +
geom_line( aes(y=dailyTransactions)) +
scale_y_continuous()
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=1, na.rm=TRUE)
lagPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
leadlagPRCP <- lagPRCP %>%
lead(lagPRCP, n=1, na.rm=TRUE)
leadlagPRCP <- lagPRCP %>%
ungroup() %>%
lead(lagPRCP, n=1, na.rm=TRUE)
newPRCP <- maxPRCP %>%
mutate(dailyTransactions = 30000*(maxPRCP - .5))
View(newPRCP)
newPRCP <- data[!is.na(newPRCP)]
newPRCP <- data[!is.na(newPRCP$maxPRCP)]
newPRCP <- na.omit(newPRCP)
leadlagPRCP <- newPRCP %>%
lead(lagPRCP, n=1, na.rm=TRUE)
leadlagPRCP <- newPRCP %>%
lead(newPRCP, n=1, na.rm=TRUE)
leadPRCP <- newPRCP %>%
lead(newPRCP, n=1, na.rm=TRUE)
leadPRCP <- newPRCP %>%
ungroup(YEAR) %>%
lead(newPRCP, n=1, na.rm=TRUE)
leadPRCP <- newPRCP %>%
ungroup(YEAR)
View(df)
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP - .5))
newPRCP <- na.omit(newPRCP)
leadPRCP <- newPRCP %>%
lead(newPRCP, n=1, na.rm=TRUE)
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP - .5))
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP))
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP)) %>%
newPRCP <- select(c(newPRCP$DATE, newPRCP$PRCP, newPRCP$dailyTrainsactions))
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP))
newPRCP <- select(c(newPRCP$DATE, newPRCP$PRCP, newPRCP$dailyTrainsactions))
newPRCP <- select(newPRCP, c(DATE, PRCP, dailyTrainsactions))
newPRCP <- select(newPRCP, c(DATE, PRCP, dailyTransactions))
leadPRCP <- newPRCP %>%
lead(newPRCP, n=1, na.rm=TRUE)
newPRCP <- df %>%
mutate(dailyTransactions = 30000*(PRCP+1))
newPRCP <- select(newPRCP, c(DATE, PRCP, dailyTransactions))
newPRCP <- na.action = na.exclude
newPRCP <- (select(newPRCP, c(DATE, PRCP, dailyTransactions)), na.action = na.exclude)
newPRCP <- (select(newPRCP, c(DATE, PRCP, dailyTransactions), na.action = na.exclude)
newPRCP <- (select(newPRCP, c(DATE, PRCP, dailyTransactions), na.action = na.exclude))
newPRCP <- select(newPRCP, c(DATE, PRCP, dailyTransactions))
newPRCP <- na.omit(newPRCP)
leadPRCP <- newPRCP %>%
lead(newPRCP, n=1, na.rm=TRUE)
leadPRCP <- newPRCP %>%
ungroup %>%
lead(newPRCP, n=1, na.rm=TRUE)
leadPRCP <- newPRCP %>%
ungroup %>%
mutate(lead = lead(newPRCP, n=1))
View(leadPRCP)
leadPRCP <- newPRCP %>%
ungroup %>%
mutate(lead = lead(newPRCP, n=3))
ggplot(leadPRCP, aes(x=DATE)) +
geom_line( aes(y=PRCP)) +
geom_line( aes(y=lead$dailyTransaction))
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP))
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP)) +
scale_y_continuous(
sec.axis = sec_axis(~ . * 1.20, name = "mpg (UK)")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP)) +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP) color=blue) +
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color=blue) +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
test <- scale(leadPRCP)
test <- leadPRCP %>%
mutate_at(c(2,6), funs(c(scale(.))))
test <- leadPRCP %>%
mutate_at(c(2,6)
test <- lapply(leadPRCP[c(2, 6), function(x) c(scale(x)))
test <- lapply(leadPRCP[c(2, 6), function(x) c(scale(x))
leadPRCP[c(2, 6)] <- scale(df[c(3, 6)])
leadPRCP[c(2, 6)] <- scale(leadPRCP[c(3, 6)])
leadPRCP <- newPRCP %>%
ungroup %>%
mutate(lead = lead(newPRCP, n=3))
leadScaled <- leadPRCP  %>%
mutate_each_(list(~scale(.) %>% as.vector),
vars = c("DATE","PRCP", "lead$dailyTransactions")) %>%
select(DATE, PRCP, lead$dailyTransactions)
leadScaled <- leadPRCP  %>%
mutate_each_(list(~scale(.) %>% as.vector),
vars = c("PRCP", "lead$dailyTransactions")) %>%
select(DATE, PRCP, lead$dailyTransactions)
leadScaled <- leadPRCP  %>%
mutate_each_(list(~scale(.) %>% as.vector),
vars = c("PRCP", "lead$dailyTransactions"))
leadScaled <- leadPRCP  %>%
mutate_each_(list(~scale(.) %>% as.vector)
leadScaled <- leadPRCP  %>%
library(plotrix)
twoord.plot(leadPRCP$PRCP, leadPRCP$DATE, leadPRCP$dailyTransactions)
twoord.plot(leadPRCP$PRCP, leadPRCP$dailyTransactions)
twoord.plot(leadPRCP$PRCP, leadPRCP$dailyTransactions, leadPRCP$DATE)
twoord.plot(leadPRCP$DATE, leadPRCP$PRCP, leadPRCP$dailyTransactions)
twoord.plot(leadPRCP$PRCP, leadPRCP$DATE, leadPRCP$dailyTransactions)
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
par(new=TRUE)
plot(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
axes=FALSE, xlab="", ylab="")
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
par(new=FALSE)
plot(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
axes=FALSE, xlab="", ylab="")
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
par(new=TRUE)
points(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
axes=FALSE, xlab="", ylab="")
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
points(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
axes=FALSE, xlab="", ylab="")
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
points(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
axis=FALSE, xlab="", ylab="")
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP, col="blue")
points(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions, col="green",
xlab="", ylab="")
par(mar = c(5, 4, 4, 4) + 0.3)              # Additional space for second y-axis
plot(x=leadPRCP$DATE, y=leadPRCP$PRCP,
col="blue")
par(new=TRUE)
points(x=leadPRCP$DATE, y=leadPRCP$dailyTransactions,
col="green",
xlab="",
ylab="")
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
b <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=lead$dailyTransactions), color="black") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b
a <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
b <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=lead$dailyTransactions), color="black") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a +b
b <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=lead$dailyTransactions), color="black") +
#geom_line(aes(y=lead$dailyTransactions), color="black") +
scale_y_continuous(
sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a +b
b <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=lead$dailyTransactions), color="black")
a + b
b <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=lead$dailyTransactions/10000), color="black")
a + b
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
geom_line(aes(y=lead$dailyTransactions/10000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_line(aes(y=PRCP), color="blue") +
geom_point(aes(y=lead$dailyTransactions/10000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_point(aes(y=PRCP), color="blue") +
geom_point(aes(y=lead$dailyTransactions/10000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_point(aes(y=PRCP), color="blue") +
geom_path(aes(y=lead$dailyTransactions/10000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_point(aes(y=PRCP), color="blue") +
geom_path(aes(y=lead$dailyTransactions/30000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
c <- ggplot(leadPRCP, aes(x=DATE)) +
geom_point(aes(y=PRCP), color="blue") +
geom_point(aes(y=lead$dailyTransactions/30000), color="black") +
scale_y_continuous(
#sec.axis = sec_axis(~ . * 20000.420000, name = "Sales")
)
a + b + c
#creating dataframe
orig.df <- read.csv("austinClimateUPDATED.csv")
getwd()
setwd("C:/Users/andre/OneDrive/Desktop/PDAT 622")
#creating dataframe
orig.df <- read.csv("austinClimateUPDATED.csv")
setwd("C:/Users/andre/OneDrive/Desktop/PDAT 622")
#creating dataframe
orig.df <- read.csv("austinClimateUPDATED.csv")
